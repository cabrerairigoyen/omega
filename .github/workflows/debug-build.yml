name: Debug Build Issues

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  debug-build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout Omega
      uses: actions/checkout@v4
      with:
        repository: 'Omega-Numworks/Omega'
        submodules: recursive
        path: 'omega'
        
    - name: Checkout Pi Stream App
      uses: actions/checkout@v4
      with:
        path: 'pi-stream-app'
        
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git imagemagick libx11-dev libxext-dev libfreetype6-dev libpng-dev libjpeg-dev pkg-config gcc-arm-none-eabi binutils-arm-none-eabi
        
    - name: Debug File Structure
      run: |
        echo "=== ROOT ==="
        ls -la
        echo "=== PI STREAM APP ==="
        find pi-stream-app -type f | head -20
        echo "=== OMEGA APPS ==="
        ls -la omega/apps/ | head -10
        echo "=== OMEGA BUILD CONFIG BEFORE ==="
        tail -5 omega/build/config.mak
        
    - name: Test Simple Omega Build (No Pi Stream)
      run: |
        cd omega
        echo "=== Testing basic Omega build ==="
        make clean
        timeout 300 make OMEGA_USERNAME="Test" -j2 || echo "Build timeout or failed"
        echo "=== Build result ==="
        ls -la output/ || echo "No output directory"
        
    - name: Integrate Pi Stream (If Basic Build Works)
      if: always()
      run: |
        # Copy app
        cp -r pi-stream-app/pi_stream_app omega/apps/
        
        # Add to config
        echo "EPSILON_APPS += apps/pi_stream_app" >> omega/build/config.mak
        
        echo "=== CONFIG AFTER ==="
        tail -5 omega/build/config.mak
        
        echo "=== PI STREAM APP FILES ==="
        ls -la omega/apps/pi_stream_app/
        
        echo "=== CHECK MAKEFILE ==="
        cat omega/apps/pi_stream_app/Makefile || echo "No Makefile found"
        
    - name: Try Pi Stream Build
      if: always()
      run: |
        cd omega
        echo "=== Clean build with Pi Stream ==="
        make clean
        timeout 600 make OMEGA_USERNAME="PiStream" -j1 2>&1 | tee build.log || echo "Build failed"
        echo "=== Last 50 lines of build ==="
        tail -50 build.log
        echo "=== Output directory ==="
        find output -name "*.bin" -o -name "*.hex" 2>/dev/null || echo "No binaries found"
        
    - name: Upload Debug Info
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: |
          omega/build.log
          omega/apps/pi_stream_app/
        retention-days: 7
