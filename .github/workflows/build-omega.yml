name: Build Omega Pi Stream Binpack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permet dÃ©clenchement manuel

jobs:
  build-omega:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Omega
      uses: actions/checkout@v4
      with:
        repository: 'Omega-Numworks/Omega'
        submodules: recursive
        path: 'omega'
        
    - name: Checkout Pi Stream App
      uses: actions/checkout@v4
      with:
        path: 'pi-stream-app'
        
    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git imagemagick libx11-dev libxext-dev libfreetype6-dev libpng-dev libjpeg-dev pkg-config gcc-arm-none-eabi binutils-arm-none-eabi
        
    - name: Integrate Pi Stream App
      run: |
        # Copier l'app dans Omega
        cp -r pi-stream-app/pi_stream_app omega/apps/
        
        # Ajouter Ã  la configuration
        echo "EPSILON_APPS += apps/pi_stream_app" >> omega/build/config.mak
        
        # Copier les icÃ´nes dans tous les thÃ¨mes
        mkdir -p omega/themes/themes/local/omega_light/apps/
        mkdir -p omega/themes/themes/local/omega_dark/apps/
        mkdir -p omega/themes/themes/local/epsilon_light/apps/
        mkdir -p omega/themes/themes/local/epsilon_dark/apps/
        
        cp pi-stream-app/pi_stream_app/pi_stream_icon.png omega/themes/themes/local/omega_light/apps/
        cp pi-stream-app/pi_stream_app/pi_stream_icon.png omega/themes/themes/local/omega_dark/apps/
        cp pi-stream-app/pi_stream_app/pi_stream_icon.png omega/themes/themes/local/epsilon_light/apps/
        cp pi-stream-app/pi_stream_app/pi_stream_icon.png omega/themes/themes/local/epsilon_dark/apps/
        
    - name: Build Omega with Pi Stream
      run: |
        cd omega
        make clean
        make OMEGA_USERNAME="PiStream" binpack -j$(nproc)
        
    - name: Upload Binpack
      uses: actions/upload-artifact@v4
      with:
        name: omega-pi-stream-binpack
        path: omega/output/device/n0110/release/binpack.bin
        
    - name: Create Release on Success
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "build-${{ github.run_number }}"
        name: "Omega Pi Stream Build ${{ github.run_number }}"
        body: |
          ðŸ§® **Omega Pi Stream Binpack**
          
          ðŸ“± **Installation WebDFU:**
          1. NumWorks en mode DFU: RESET + 6 + USB
          2. WebDFU: https://ti-planet.github.io/webdfu_numworks/n0110/
          3. Upload ce binpack.bin
          
          ðŸš€ **FonctionnalitÃ©s:**
          - Communication UART temps rÃ©el avec Raspberry Pi
          - Rendu LaTeX mathÃ©matique
          - Interface scrollable
          
          âš¡ Build automatique #${{ github.run_number }}
        files: |
          omega/output/device/n0110/release/binpack.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
